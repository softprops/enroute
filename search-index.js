var searchIndex={};
searchIndex["enroute"] = {"doc":"üõ©Ô∏è A parsimonious, framework and IO agnostic HTTP request‚Ä¶","i":[[3,"Captures","enroute","Captures represents a group of captured strings for a‚Ä¶",null,null],[3,"And","","",null,null],[3,"Or","","",null,null],[3,"Router","","A compiled set of routes",null,null],[3,"Builder","","Collects a list of route definitions",null,null],[5,"matcher","","Utility fn for coercing a capable type into a `Matcher`",null,[[]]],[5,"routes","","Creates a new `Builder`",null,[[],["builder"]]],[8,"Matcher","","A secondary means of routing requests via request‚Ä¶",null,null],[10,"matches","","",0,[[["self"],["request"]],["bool"]]],[11,"and","","",0,[[["m"]],["and"]]],[11,"or","","",0,[[["m"]],["or"]]],[8,"Handler","","An abstract request handler",null,null],[16,"Body","","",1,null],[16,"Output","","",1,null],[10,"call","","",1,[[["captures"],["option",["captures"]],["self"],["request"]]]],[11,"route","","The primary means of resolving a route",2,[[["request"],["self"]],["option"]]],[11,"any","","Routes requests by path",3,[[["str"],["h"]],["self"]]],[11,"get","","Routes requests by path and HTTP GET method",3,[[["str"],["h"]],["self"]]],[11,"post","","",3,[[["str"],["h"]],["self"]]],[11,"delete","","",3,[[["str"],["h"]],["self"]]],[11,"patch","","",3,[[["str"],["h"]],["self"]]],[11,"route","","",3,[[["str"],["m"],["h"]],["self"]]],[11,"build","","",3,[[],[["router"],["box",["error"]],["result",["router","box"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"index","","",4,[[["str"],["self"]],["str"]]],[11,"index","","",4,[[["self"],["usize"]],["str"]]],[11,"matches","","",5,[[["self"],["request"]],["bool"]]],[11,"matches","","",6,[[["self"],["request"]],["bool"]]],[11,"default","","",3,[[],["self"]]],[11,"get","","Returns the match associated with the capture group at‚Ä¶",4,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If‚Ä¶",4,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order‚Ä¶",4,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the‚Ä¶",4,[[["str"],["string"],["self"]]]],[11,"len","","Returns the number of captured groups.",4,[[["self"]],["usize"]]]],"p":[[8,"Matcher"],[8,"Handler"],[3,"Router"],[3,"Builder"],[3,"Captures"],[3,"And"],[3,"Or"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);